{
    "id": "ibm.devops.services.pipeline.notification.slack",
    "version": 1,
    "name_key": "ExtName",
    "desc_key": "ExtDesc",
    "extension_type": "Test",
    "message_key": "ExtMessage",
    "inputs": [
        {
            "type": "Bluemix",
            "inclusion" : "always"
        }
    ],
    "params": [
        {
            "name": "SLACK_CHANNEL",
            "type": "Text",
            "required": "false",
            "default_value": "",
            "label_key": "SLACK_CHANNEL_KEY",
            "desc_key": "SLACK_CHANNEL_DESC"
        },          
        {
            "name": "MESSAGE",
            "type": "Text",
            "required": "false",
            "default_value": "",
            "label_key": "MESSAGE_KEY",
            "desc_key": "MESSAGE_DESC"
        },
        {
            "name": "ONLY_NOTIFY",
            "type": "Select",
            "required": "false",
            "default_value": "ANY",
            "label_key": "ONLY_NOTIFY_KEY",
            "desc_key": "ONLY_NOTIFY_DESC",
            "options": [
                {
                    "label_key": "ANY_KEY",
                    "value": "ANY"
                },
                { 
                    "label_key": "SUCCESS_KEY",
                    "value": "SUCCESS" 
                },
                { 
                    "label_key": "FAILURE_KEY",
                    "value": "FAILURE"
                }
            ]
        }
    ],
    "outputs": [
        {
            "type": "Artifacts",
            "inclusion" : "always"
        }
    ],
    "execution": {
        "type": "JenkinsDocker",
        "shell": "#!/bin/bash
export INIT_START_TIME=$(date +\"%s\")
export SLACK_CHANNEL=\"#SLACK_CHANNEL#\"
export MESSAGE=\"#MESSAGE#\"
export ONLY_NOTIFY=\"#ONLY_NOTIFY#\"
set +x
set +e
# OSSC line

if [[ $DEBUG -eq 1 ]]; then
    dpkg -l | grep '^ii' > $EXT_DIR/pkglist2
    diff $EXT_DIR/pkglist $EXT_DIR/pkglist2
fi
if [ -n \"$NOTIFY_JOB_STATUS\" ]; then
    if [ \"$NOTIFY_JOB_STATUS\" -eq 0 ]; then
        #success
        if [ \"$ONLY_NOTIFY\" == \"FAILURE\" ]; then
            echo -e \"Notification not running.  Previous job returned success and notification is set to only notify on failure.\"
            exit $NOTIFY_JOB_STATUS
        fi
    else
        #failure
        if [ \"$ONLY_NOTIFY\" == \"SUCCESS\" ]; then
            echo -e \"Notification not running.  Previous job returned failure and notification is set to only notify on success.\"
            exit $NOTIFY_JOB_STATUS
        fi
    fi
else
    #no value set for previous job return code
    if [ \"$ONLY_NOTIFY\" == \"FAILURE\" ]; then
        echo -e \"Notification not running.  No value was set for NOTIFY_JOB_STATUS and notify is set to only notify on failure\"
        exit $NOTIFY_JOB_STATUS
    fi    
    if [ \"$ONLY_NOTIFY\" == \"SUCCESS\" ]; then
        echo -e \"Notification not running.  No value was set for NOTIFY_JOB_STATUS and notify is set to only notify on success\"
        exit $NOTIFY_JOB_STATUS
    fi    
fi

if [[ $DEBUG -eq 1 ]]; then
    dpkg -l | grep '^ii' > $EXT_DIR/pkglist
fi 
. $EXT_DIR/_init.sh

pushd . 
cd ${EXT_DIR}
# start Notifications.js
echo -e \"Start notifications\"
mocha --reporter=spec
RESULT=$?
popd 

INIT_END_TIME=$(date +\"%s\")
INIT_EST_TIME=$(($INIT_END_TIME-$INIT_START_TIME))
echo -e \"Notification runtime of `date -u -d @\"$INIT_EST_TIME\" +\'%-Mm %-Ss\'`\"

echo \"Notification result was $RESULT with $SLACK_CHANNEL: '$MESSAGE'\" >> $ARCHIVE_DIR/notification.txt
if [ $RESULT -ne 0 ]; then 
    exit $RESULT
fi
if [ -n \"$NOTIFY_JOB_STATUS\" ]; then
    exit $NOTIFY_JOB_STATUS
fi
"
    }
    },
    "project": "https://hub.jazz.net/project/alchemy/Alchemy-Ostanes",
    "project_example": "https://hub.jazz.net/pipeline/rjminsha/ice-pipeline_demo",
    "project_contact": "rjminsha@us.ibm.com"
}
